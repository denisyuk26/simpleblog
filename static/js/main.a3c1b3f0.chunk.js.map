{"version":3,"sources":["js/components/Header/index.js","js/components/Footer/index.js","js/actions/index.js","js/containers/PostsList.js","js/containers/Comments.js","js/containers/Post.js","js/reducers/posts.reducer.js","js/store.js","js/index.js","serviceWorker.js","index.js","js/containers/app.module.css"],"names":["Header","react_default","a","createElement","className","styles","header","Footer","footer","selectPost","post","localStorage","setItem","concat","id","type","data","getPosts","dispatch","fetch","then","response","json","posts","getPost","getItem","PostsList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getActivePost","showPostsList","map","Link","key","to","post_item","onClick","author","title","state","app","container","Component","connect","active","bindActionCreators","CommentsList","getComments","postItem","comments","comment","body","date","Fragment","Post","activeId","filter","i","Comments","initialState","store","createStore","combineReducers","arguments","length","undefined","action","toConsumableArray","applyMiddleware","logger","thunk","App","es","HashRouter","basename","process","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","js","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a3c1b3f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './header.module.css'\r\n\r\n\r\nexport default function Header () {\r\n    return (\r\n        \r\n        <header className={styles.header}>\r\n            blog header\r\n        </header>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport styles from './footer.module.css'\r\nexport default function Footer () {\r\n    return (\r\n        \r\n        <footer className={styles.footer}>\r\n            blog footer\r\n        </footer>\r\n    )\r\n}","export const selectPost = post => {\r\n  localStorage.setItem(\"post\", `/posts/${post.id}`);\r\n  return {\r\n    type: \"SELECT_POST\",\r\n    data: post.id\r\n  };\r\n};\r\n\r\nexport const getPosts = () => {\r\n  return dispatch => {\r\n    fetch(\"https://simple-blog-api.crew.red/posts\")\r\n      .then(response => response.json())\r\n      .then(posts => {\r\n        dispatch({ type: \"FETCHING_POST_SUCCES\", data: posts });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getPost = () => {\r\n  let id = localStorage.getItem(\"post\");\r\n  return dispatch => {\r\n    fetch(`https://simple-blog-api.crew.red${id}?_embed=comments`)\r\n      .then(response => response.json())\r\n      .then(post => {\r\n        dispatch({ type: \"GET_POST\", data: post });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { selectPost, getPosts, getPost } from \"../actions\";\r\n\r\nimport styles from './app.module.css'\r\n\r\nclass PostsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getPosts();\r\n  }\r\n\r\n  getActivePost = () => {\r\n    this.props.getPost();\r\n  };\r\n\r\n  showPostsList = () => {\r\n    return this.props.posts.map(post => (\r\n      <Link key={post.id} to={`/posts/${post.id}`}>\r\n        <li className = {styles.post_item} onClick={() => this.props.selectPost(post)}>\r\n          <p className={styles.author}>Author: {post.author}</p> \r\n          <p className={styles.title}>Title: {post.title}</p>\r\n        </li>\r\n      </Link>\r\n    ));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={styles.app}>\r\n        <ul className={styles.container}>{this.showPostsList()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts,\r\n    post: state.post,\r\n    active: state.active\r\n  };\r\n}\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    { getPosts: getPosts, selectPost: selectPost, getPost: getPost() },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(PostsList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getPost } from \"../actions\";\r\nimport styles from './app.module.css'\r\n\r\nclass CommentsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    this.props.getPost();\r\n  }\r\n\r\n  getComments = () => {\r\n    if (this.props.post) {\r\n      return this.props.post.map(postItem =>\r\n        postItem.comments.map(comment => (\r\n          <div className={styles.comment} key={comment.id}>\r\n            <p>{comment.body}</p>\r\n            <p>{comment.date}</p>\r\n          </div>\r\n        ))\r\n      );\r\n    }\r\n    return;\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Comments</h2>\r\n        {this.getComments()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts,\r\n    post: state.post\r\n  };\r\n}\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators({ getPost }, dispatch);\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(CommentsList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { selectPost, getPosts, getPost } from \"../actions\";\r\nimport CommentList from \"./Comments\";\r\nimport styles from './app.module.css'\r\n\r\n\r\nclass Post extends Component {\r\n  componentDidMount() {\r\n    this.props.getPosts();\r\n    this.props.getPost();\r\n  }\r\n\r\n  getActivePost = () => {\r\n    const activeId = localStorage.getItem(\"post\");\r\n    return this.props.posts\r\n      .filter(i => `/posts/${i.id}` === activeId)\r\n      .map(post => {\r\n        return (\r\n          <div key={post.id}>\r\n            <h3>{post.title}</h3>\r\n            <p>{post.body}</p>\r\n            <p>{post.author}</p>\r\n            <p>{post.date}</p>\r\n          </div>\r\n        );\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.post}>\r\n        {this.getActivePost()}\r\n        <CommentList post={this.props.post} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts,\r\n    post: state.post,\r\n    active: state.active\r\n  };\r\n}\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    { getPosts: getPosts, selectPost: selectPost, getPost: getPost },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(Post);\r\n","const initialState = [];\r\n\r\nexport function postsFetch(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"FETCHING_POST_SUCCES\":\r\n      return [...action.data];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function selectPost(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SELECT_POST\":\r\n      return [action.data];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function getPost(state = null, action) {\r\n  switch (action.type) {\r\n    case \"GET_POST\":\r\n      return [action.data];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { postsFetch, selectPost, getPost } from \"./reducers/posts.reducer\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    posts: postsFetch,\r\n    post: getPost,\r\n    active: selectPost\r\n  }),\r\n  {},\r\n  applyMiddleware(logger, thunk)\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport PostsList from \"./containers/PostsList\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Post from \"./containers/Post\";\r\nimport store from \"./store\";\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Header />\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={PostsList} />\r\n            <Route exact path=\"/posts/:postId\" component={Post} />\r\n          </Switch>\r\n        </HashRouter>\r\n        <Footer />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3kx8j\",\"post\":\"app_post__3YL1S\",\"container\":\"app_container__nyHn4\",\"post_item\":\"app_post_item__3uCur\",\"author\":\"app_author__3D51-\",\"title\":\"app_title__2TLVB\",\"comment\":\"app_comment__1KhAw\"};"],"sourceRoot":""}